<?php 

/**
 * 
 */
class Services
{
	
	function __construct()
	{

	}

	public function index($fileService,$param = '', $data = [])
	{
		if ($param == '') {
			$this->info();
		}else{
			if (file_exists($fileService)) {
				include $fileService;
				$className = new $param;
				if (count($data) > 0) {
					if (method_exists($className, $data[0])) {
						if (isset($data[1])) {
							if ($data[1] != '') {
								$arraData = [];
								for ($i=1; $i < count($data); $i++) { 
									array_push($arraData, $data[$i]);
								}
								$className->$data[0]($arraData);
							}else{
								$className->$data[0]();
							}
						}else{
							$className->$data[0]();
						}
					}else{
						echo "el metodo solicitado no existe en el servicio";
					}
				}else{
					if (method_exists($className, "index")) {
						$className->index();
					}else{
						echo "El servicio minimo deberia contar con una funcion index() para iniciar su ejecucion";
					}
				}
			}else{
				$this->info();
			}
		}
	}


	public function info()
	{
		header('Content-Type: application/json');
		$dataServices = file_get_contents('Controller/Services/ServiceConfig.json');
		echo $dataServices;
	}


}

 ?>